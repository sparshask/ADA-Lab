#include<stdio.h>
#include<stdlib.h>
int res[20], s[20], j=0;
void dfs(int u, int n, int cost[20][20])
{
    int v;
    s[u] = 1;
    for(v=0; v<n; v++)
    {
        if(cost[u][v] == 1 && s[v] == 0)
        {
            dfs(v, n, cost);
        }
    }
    res[j++] = u;
}
void dfs_tp(int n, int a[20][20])
{
    int i; 
    for(i=0; i<n; i++)
    {
        s[i] = 0;
    }
    j=0;
    for(i=0; i<n; i++)
    {
        if(s[i] == 0)
        dfs(i, n, a);
    }
}
void main()
{
    int i, j, k, m, n, cost[20][20];
    printf("Enter the number of nodes\n");
    scanf("%d",&n);
    for(i=0; i<n; i++)
    {
        for(j=0; j<n; j++)
        {
            cost[i][j] = 0;
        }
    }
    printf("Enter the number of edges\n");
    scanf("%d",&m);
    for(k=0; k<m; k++)
    {
        printf("Enter edge i, j\n");
        scanf("%d %d",&i, &j);
        cost[i][j] = 1;
    }
    dfs_tp(n, cost);
    printf("The topological sequence:\t");
    for(i=0; i<n; i++)
        printf("%d", res[i]);
    printf("\n");
}
